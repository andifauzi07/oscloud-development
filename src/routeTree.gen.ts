/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as PerformanceIndexImport } from './routes/performance/index'
import { Route as PayrollIndexImport } from './routes/payroll/index'
import { Route as EmployeeIndexImport } from './routes/employee/index'
import { Route as CompanyIndexImport } from './routes/company/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as ProjectsSettingIndexImport } from './routes/projects/setting/index'
import { Route as ProjectsProjectIdIndexImport } from './routes/projects/$projectId/index'
import { Route as PerformanceSettingIndexImport } from './routes/performance/setting/index'
import { Route as PerformanceEmployeeIdIndexImport } from './routes/performance/$employeeId/index'
import { Route as PayrollEmployeeIdIndexImport } from './routes/payroll/$employeeId/index'
import { Route as FeaturesPersonnelListIndexImport } from './routes/features/personnel-list/index'
import { Route as FeaturesCompanyListIndexImport } from './routes/features/company-list/index'
import { Route as FeaturesProfitLossIndexImport } from './routes/features/ProfitLoss/index'
import { Route as EmployeeShiftscheduleIndexImport } from './routes/employee/shiftschedule/index'
import { Route as EmployeeSettingIndexImport } from './routes/employee/setting/index'
import { Route as EmployeeUserIdIndexImport } from './routes/employee/$userId/index'
import { Route as CompanySettingIndexImport } from './routes/company/setting/index'
import { Route as CompanyCompanyIdIndexImport } from './routes/company/$companyId/index'
import { Route as AuthSignupIndexImport } from './routes/auth/signup/index'
import { Route as AuthSigninIndexImport } from './routes/auth/signin/index'
import { Route as PerformanceSettingTemplateIdIndexImport } from './routes/performance/setting/$templateId/index'
import { Route as PerformanceEmployeeIdAccesscontrolIndexImport } from './routes/performance/$employeeId/accesscontrol/index'
import { Route as PerformanceEmployeeIdSheetIdIndexImport } from './routes/performance/$employeeId/$sheetId/index'
import { Route as PayrollEmployeeIdJoinedProjectsIndexImport } from './routes/payroll/$employeeId/joined-projects/index'
import { Route as PayrollEmployeeIdPaymentIdIndexImport } from './routes/payroll/$employeeId/$paymentId/index'
import { Route as FeaturesProfitLossProjectNameIndexImport } from './routes/features/ProfitLoss/$projectName/index'
import { Route as EmployeeUserIdProfileIndexImport } from './routes/employee/$userId/profile/index'
import { Route as EmployeeUserIdPerformanceIndexImport } from './routes/employee/$userId/performance/index'
import { Route as EmployeeUserIdPayrollIndexImport } from './routes/employee/$userId/payroll/index'
import { Route as CompanySettingDatacategoryIndexImport } from './routes/company/setting/datacategory/index'
import { Route as CompanyCompanyIdCompanyPersonnelIndexImport } from './routes/company/$companyId/companyPersonnel/index'
import { Route as EmployeeSettingDepartmentDepartmentNameIndexImport } from './routes/employee/setting/department/$departmentName/index'
import { Route as EmployeeSettingCategoryCategoryNameIndexImport } from './routes/employee/setting/category/$categoryName/index'
import { Route as CompanySettingDatacategoryDatacategoryViewIndexImport } from './routes/company/setting/datacategory/datacategoryView/index'
import { Route as CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexImport } from './routes/company/$companyId/companyPersonnel/$companyPersonnelId/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const PerformanceIndexRoute = PerformanceIndexImport.update({
  id: '/performance/',
  path: '/performance/',
  getParentRoute: () => rootRoute,
} as any)

const PayrollIndexRoute = PayrollIndexImport.update({
  id: '/payroll/',
  path: '/payroll/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeeIndexRoute = EmployeeIndexImport.update({
  id: '/employee/',
  path: '/employee/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyIndexRoute = CompanyIndexImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsSettingIndexRoute = ProjectsSettingIndexImport.update({
  id: '/projects/setting/',
  path: '/projects/setting/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexImport.update({
  id: '/projects/$projectId/',
  path: '/projects/$projectId/',
  getParentRoute: () => rootRoute,
} as any)

const PerformanceSettingIndexRoute = PerformanceSettingIndexImport.update({
  id: '/performance/setting/',
  path: '/performance/setting/',
  getParentRoute: () => rootRoute,
} as any)

const PerformanceEmployeeIdIndexRoute = PerformanceEmployeeIdIndexImport.update(
  {
    id: '/performance/$employeeId/',
    path: '/performance/$employeeId/',
    getParentRoute: () => rootRoute,
  } as any,
)

const PayrollEmployeeIdIndexRoute = PayrollEmployeeIdIndexImport.update({
  id: '/payroll/$employeeId/',
  path: '/payroll/$employeeId/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesPersonnelListIndexRoute = FeaturesPersonnelListIndexImport.update(
  {
    id: '/features/personnel-list/',
    path: '/features/personnel-list/',
    getParentRoute: () => rootRoute,
  } as any,
)

const FeaturesCompanyListIndexRoute = FeaturesCompanyListIndexImport.update({
  id: '/features/company-list/',
  path: '/features/company-list/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesProfitLossIndexRoute = FeaturesProfitLossIndexImport.update({
  id: '/features/ProfitLoss/',
  path: '/features/ProfitLoss/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeeShiftscheduleIndexRoute = EmployeeShiftscheduleIndexImport.update(
  {
    id: '/employee/shiftschedule/',
    path: '/employee/shiftschedule/',
    getParentRoute: () => rootRoute,
  } as any,
)

const EmployeeSettingIndexRoute = EmployeeSettingIndexImport.update({
  id: '/employee/setting/',
  path: '/employee/setting/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeeUserIdIndexRoute = EmployeeUserIdIndexImport.update({
  id: '/employee/$userId/',
  path: '/employee/$userId/',
  getParentRoute: () => rootRoute,
} as any)

const CompanySettingIndexRoute = CompanySettingIndexImport.update({
  id: '/company/setting/',
  path: '/company/setting/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyCompanyIdIndexRoute = CompanyCompanyIdIndexImport.update({
  id: '/company/$companyId/',
  path: '/company/$companyId/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupIndexRoute = AuthSignupIndexImport.update({
  id: '/auth/signup/',
  path: '/auth/signup/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninIndexRoute = AuthSigninIndexImport.update({
  id: '/auth/signin/',
  path: '/auth/signin/',
  getParentRoute: () => rootRoute,
} as any)

const PerformanceSettingTemplateIdIndexRoute =
  PerformanceSettingTemplateIdIndexImport.update({
    id: '/performance/setting/$templateId/',
    path: '/performance/setting/$templateId/',
    getParentRoute: () => rootRoute,
  } as any)

const PerformanceEmployeeIdAccesscontrolIndexRoute =
  PerformanceEmployeeIdAccesscontrolIndexImport.update({
    id: '/performance/$employeeId/accesscontrol/',
    path: '/performance/$employeeId/accesscontrol/',
    getParentRoute: () => rootRoute,
  } as any)

const PerformanceEmployeeIdSheetIdIndexRoute =
  PerformanceEmployeeIdSheetIdIndexImport.update({
    id: '/performance/$employeeId/$sheetId/',
    path: '/performance/$employeeId/$sheetId/',
    getParentRoute: () => rootRoute,
  } as any)

const PayrollEmployeeIdJoinedProjectsIndexRoute =
  PayrollEmployeeIdJoinedProjectsIndexImport.update({
    id: '/payroll/$employeeId/joined-projects/',
    path: '/payroll/$employeeId/joined-projects/',
    getParentRoute: () => rootRoute,
  } as any)

const PayrollEmployeeIdPaymentIdIndexRoute =
  PayrollEmployeeIdPaymentIdIndexImport.update({
    id: '/payroll/$employeeId/$paymentId/',
    path: '/payroll/$employeeId/$paymentId/',
    getParentRoute: () => rootRoute,
  } as any)

const FeaturesProfitLossProjectNameIndexRoute =
  FeaturesProfitLossProjectNameIndexImport.update({
    id: '/features/ProfitLoss/$projectName/',
    path: '/features/ProfitLoss/$projectName/',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeeUserIdProfileIndexRoute = EmployeeUserIdProfileIndexImport.update(
  {
    id: '/employee/$userId/profile/',
    path: '/employee/$userId/profile/',
    getParentRoute: () => rootRoute,
  } as any,
)

const EmployeeUserIdPerformanceIndexRoute =
  EmployeeUserIdPerformanceIndexImport.update({
    id: '/employee/$userId/performance/',
    path: '/employee/$userId/performance/',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeeUserIdPayrollIndexRoute = EmployeeUserIdPayrollIndexImport.update(
  {
    id: '/employee/$userId/payroll/',
    path: '/employee/$userId/payroll/',
    getParentRoute: () => rootRoute,
  } as any,
)

const CompanySettingDatacategoryIndexRoute =
  CompanySettingDatacategoryIndexImport.update({
    id: '/company/setting/datacategory/',
    path: '/company/setting/datacategory/',
    getParentRoute: () => rootRoute,
  } as any)

const CompanyCompanyIdCompanyPersonnelIndexRoute =
  CompanyCompanyIdCompanyPersonnelIndexImport.update({
    id: '/company/$companyId/companyPersonnel/',
    path: '/company/$companyId/companyPersonnel/',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeeSettingDepartmentDepartmentNameIndexRoute =
  EmployeeSettingDepartmentDepartmentNameIndexImport.update({
    id: '/employee/setting/department/$departmentName/',
    path: '/employee/setting/department/$departmentName/',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeeSettingCategoryCategoryNameIndexRoute =
  EmployeeSettingCategoryCategoryNameIndexImport.update({
    id: '/employee/setting/category/$categoryName/',
    path: '/employee/setting/category/$categoryName/',
    getParentRoute: () => rootRoute,
  } as any)

const CompanySettingDatacategoryDatacategoryViewIndexRoute =
  CompanySettingDatacategoryDatacategoryViewIndexImport.update({
    id: '/company/setting/datacategory/datacategoryView/',
    path: '/company/setting/datacategory/datacategoryView/',
    getParentRoute: () => rootRoute,
  } as any)

const CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute =
  CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexImport.update({
    id: '/company/$companyId/companyPersonnel/$companyPersonnelId/',
    path: '/company/$companyId/companyPersonnel/$companyPersonnelId/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/': {
      id: '/employee/'
      path: '/employee'
      fullPath: '/employee'
      preLoaderRoute: typeof EmployeeIndexImport
      parentRoute: typeof rootRoute
    }
    '/payroll/': {
      id: '/payroll/'
      path: '/payroll'
      fullPath: '/payroll'
      preLoaderRoute: typeof PayrollIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/': {
      id: '/performance/'
      path: '/performance'
      fullPath: '/performance'
      preLoaderRoute: typeof PerformanceIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin/': {
      id: '/auth/signin/'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup/': {
      id: '/auth/signup/'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/$companyId/': {
      id: '/company/$companyId/'
      path: '/company/$companyId'
      fullPath: '/company/$companyId'
      preLoaderRoute: typeof CompanyCompanyIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/setting/': {
      id: '/company/setting/'
      path: '/company/setting'
      fullPath: '/company/setting'
      preLoaderRoute: typeof CompanySettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/$userId/': {
      id: '/employee/$userId/'
      path: '/employee/$userId'
      fullPath: '/employee/$userId'
      preLoaderRoute: typeof EmployeeUserIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/setting/': {
      id: '/employee/setting/'
      path: '/employee/setting'
      fullPath: '/employee/setting'
      preLoaderRoute: typeof EmployeeSettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/shiftschedule/': {
      id: '/employee/shiftschedule/'
      path: '/employee/shiftschedule'
      fullPath: '/employee/shiftschedule'
      preLoaderRoute: typeof EmployeeShiftscheduleIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/ProfitLoss/': {
      id: '/features/ProfitLoss/'
      path: '/features/ProfitLoss'
      fullPath: '/features/ProfitLoss'
      preLoaderRoute: typeof FeaturesProfitLossIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/company-list/': {
      id: '/features/company-list/'
      path: '/features/company-list'
      fullPath: '/features/company-list'
      preLoaderRoute: typeof FeaturesCompanyListIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/personnel-list/': {
      id: '/features/personnel-list/'
      path: '/features/personnel-list'
      fullPath: '/features/personnel-list'
      preLoaderRoute: typeof FeaturesPersonnelListIndexImport
      parentRoute: typeof rootRoute
    }
    '/payroll/$employeeId/': {
      id: '/payroll/$employeeId/'
      path: '/payroll/$employeeId'
      fullPath: '/payroll/$employeeId'
      preLoaderRoute: typeof PayrollEmployeeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/$employeeId/': {
      id: '/performance/$employeeId/'
      path: '/performance/$employeeId'
      fullPath: '/performance/$employeeId'
      preLoaderRoute: typeof PerformanceEmployeeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/setting/': {
      id: '/performance/setting/'
      path: '/performance/setting'
      fullPath: '/performance/setting'
      preLoaderRoute: typeof PerformanceSettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/setting/': {
      id: '/projects/setting/'
      path: '/projects/setting'
      fullPath: '/projects/setting'
      preLoaderRoute: typeof ProjectsSettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/$companyId/companyPersonnel/': {
      id: '/company/$companyId/companyPersonnel/'
      path: '/company/$companyId/companyPersonnel'
      fullPath: '/company/$companyId/companyPersonnel'
      preLoaderRoute: typeof CompanyCompanyIdCompanyPersonnelIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/setting/datacategory/': {
      id: '/company/setting/datacategory/'
      path: '/company/setting/datacategory'
      fullPath: '/company/setting/datacategory'
      preLoaderRoute: typeof CompanySettingDatacategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/$userId/payroll/': {
      id: '/employee/$userId/payroll/'
      path: '/employee/$userId/payroll'
      fullPath: '/employee/$userId/payroll'
      preLoaderRoute: typeof EmployeeUserIdPayrollIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/$userId/performance/': {
      id: '/employee/$userId/performance/'
      path: '/employee/$userId/performance'
      fullPath: '/employee/$userId/performance'
      preLoaderRoute: typeof EmployeeUserIdPerformanceIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/$userId/profile/': {
      id: '/employee/$userId/profile/'
      path: '/employee/$userId/profile'
      fullPath: '/employee/$userId/profile'
      preLoaderRoute: typeof EmployeeUserIdProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/ProfitLoss/$projectName/': {
      id: '/features/ProfitLoss/$projectName/'
      path: '/features/ProfitLoss/$projectName'
      fullPath: '/features/ProfitLoss/$projectName'
      preLoaderRoute: typeof FeaturesProfitLossProjectNameIndexImport
      parentRoute: typeof rootRoute
    }
    '/payroll/$employeeId/$paymentId/': {
      id: '/payroll/$employeeId/$paymentId/'
      path: '/payroll/$employeeId/$paymentId'
      fullPath: '/payroll/$employeeId/$paymentId'
      preLoaderRoute: typeof PayrollEmployeeIdPaymentIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/payroll/$employeeId/joined-projects/': {
      id: '/payroll/$employeeId/joined-projects/'
      path: '/payroll/$employeeId/joined-projects'
      fullPath: '/payroll/$employeeId/joined-projects'
      preLoaderRoute: typeof PayrollEmployeeIdJoinedProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/$employeeId/$sheetId/': {
      id: '/performance/$employeeId/$sheetId/'
      path: '/performance/$employeeId/$sheetId'
      fullPath: '/performance/$employeeId/$sheetId'
      preLoaderRoute: typeof PerformanceEmployeeIdSheetIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/$employeeId/accesscontrol/': {
      id: '/performance/$employeeId/accesscontrol/'
      path: '/performance/$employeeId/accesscontrol'
      fullPath: '/performance/$employeeId/accesscontrol'
      preLoaderRoute: typeof PerformanceEmployeeIdAccesscontrolIndexImport
      parentRoute: typeof rootRoute
    }
    '/performance/setting/$templateId/': {
      id: '/performance/setting/$templateId/'
      path: '/performance/setting/$templateId'
      fullPath: '/performance/setting/$templateId'
      preLoaderRoute: typeof PerformanceSettingTemplateIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/$companyId/companyPersonnel/$companyPersonnelId/': {
      id: '/company/$companyId/companyPersonnel/$companyPersonnelId/'
      path: '/company/$companyId/companyPersonnel/$companyPersonnelId'
      fullPath: '/company/$companyId/companyPersonnel/$companyPersonnelId'
      preLoaderRoute: typeof CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/setting/datacategory/datacategoryView/': {
      id: '/company/setting/datacategory/datacategoryView/'
      path: '/company/setting/datacategory/datacategoryView'
      fullPath: '/company/setting/datacategory/datacategoryView'
      preLoaderRoute: typeof CompanySettingDatacategoryDatacategoryViewIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/setting/category/$categoryName/': {
      id: '/employee/setting/category/$categoryName/'
      path: '/employee/setting/category/$categoryName'
      fullPath: '/employee/setting/category/$categoryName'
      preLoaderRoute: typeof EmployeeSettingCategoryCategoryNameIndexImport
      parentRoute: typeof rootRoute
    }
    '/employee/setting/department/$departmentName/': {
      id: '/employee/setting/department/$departmentName/'
      path: '/employee/setting/department/$departmentName'
      fullPath: '/employee/setting/department/$departmentName'
      preLoaderRoute: typeof EmployeeSettingDepartmentDepartmentNameIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthIndexRoute
  '/company': typeof CompanyIndexRoute
  '/employee': typeof EmployeeIndexRoute
  '/payroll': typeof PayrollIndexRoute
  '/performance': typeof PerformanceIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/auth/signin': typeof AuthSigninIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/company/$companyId': typeof CompanyCompanyIdIndexRoute
  '/company/setting': typeof CompanySettingIndexRoute
  '/employee/$userId': typeof EmployeeUserIdIndexRoute
  '/employee/setting': typeof EmployeeSettingIndexRoute
  '/employee/shiftschedule': typeof EmployeeShiftscheduleIndexRoute
  '/features/ProfitLoss': typeof FeaturesProfitLossIndexRoute
  '/features/company-list': typeof FeaturesCompanyListIndexRoute
  '/features/personnel-list': typeof FeaturesPersonnelListIndexRoute
  '/payroll/$employeeId': typeof PayrollEmployeeIdIndexRoute
  '/performance/$employeeId': typeof PerformanceEmployeeIdIndexRoute
  '/performance/setting': typeof PerformanceSettingIndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/setting': typeof ProjectsSettingIndexRoute
  '/company/$companyId/companyPersonnel': typeof CompanyCompanyIdCompanyPersonnelIndexRoute
  '/company/setting/datacategory': typeof CompanySettingDatacategoryIndexRoute
  '/employee/$userId/payroll': typeof EmployeeUserIdPayrollIndexRoute
  '/employee/$userId/performance': typeof EmployeeUserIdPerformanceIndexRoute
  '/employee/$userId/profile': typeof EmployeeUserIdProfileIndexRoute
  '/features/ProfitLoss/$projectName': typeof FeaturesProfitLossProjectNameIndexRoute
  '/payroll/$employeeId/$paymentId': typeof PayrollEmployeeIdPaymentIdIndexRoute
  '/payroll/$employeeId/joined-projects': typeof PayrollEmployeeIdJoinedProjectsIndexRoute
  '/performance/$employeeId/$sheetId': typeof PerformanceEmployeeIdSheetIdIndexRoute
  '/performance/$employeeId/accesscontrol': typeof PerformanceEmployeeIdAccesscontrolIndexRoute
  '/performance/setting/$templateId': typeof PerformanceSettingTemplateIdIndexRoute
  '/company/$companyId/companyPersonnel/$companyPersonnelId': typeof CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute
  '/company/setting/datacategory/datacategoryView': typeof CompanySettingDatacategoryDatacategoryViewIndexRoute
  '/employee/setting/category/$categoryName': typeof EmployeeSettingCategoryCategoryNameIndexRoute
  '/employee/setting/department/$departmentName': typeof EmployeeSettingDepartmentDepartmentNameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthIndexRoute
  '/company': typeof CompanyIndexRoute
  '/employee': typeof EmployeeIndexRoute
  '/payroll': typeof PayrollIndexRoute
  '/performance': typeof PerformanceIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/auth/signin': typeof AuthSigninIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/company/$companyId': typeof CompanyCompanyIdIndexRoute
  '/company/setting': typeof CompanySettingIndexRoute
  '/employee/$userId': typeof EmployeeUserIdIndexRoute
  '/employee/setting': typeof EmployeeSettingIndexRoute
  '/employee/shiftschedule': typeof EmployeeShiftscheduleIndexRoute
  '/features/ProfitLoss': typeof FeaturesProfitLossIndexRoute
  '/features/company-list': typeof FeaturesCompanyListIndexRoute
  '/features/personnel-list': typeof FeaturesPersonnelListIndexRoute
  '/payroll/$employeeId': typeof PayrollEmployeeIdIndexRoute
  '/performance/$employeeId': typeof PerformanceEmployeeIdIndexRoute
  '/performance/setting': typeof PerformanceSettingIndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/setting': typeof ProjectsSettingIndexRoute
  '/company/$companyId/companyPersonnel': typeof CompanyCompanyIdCompanyPersonnelIndexRoute
  '/company/setting/datacategory': typeof CompanySettingDatacategoryIndexRoute
  '/employee/$userId/payroll': typeof EmployeeUserIdPayrollIndexRoute
  '/employee/$userId/performance': typeof EmployeeUserIdPerformanceIndexRoute
  '/employee/$userId/profile': typeof EmployeeUserIdProfileIndexRoute
  '/features/ProfitLoss/$projectName': typeof FeaturesProfitLossProjectNameIndexRoute
  '/payroll/$employeeId/$paymentId': typeof PayrollEmployeeIdPaymentIdIndexRoute
  '/payroll/$employeeId/joined-projects': typeof PayrollEmployeeIdJoinedProjectsIndexRoute
  '/performance/$employeeId/$sheetId': typeof PerformanceEmployeeIdSheetIdIndexRoute
  '/performance/$employeeId/accesscontrol': typeof PerformanceEmployeeIdAccesscontrolIndexRoute
  '/performance/setting/$templateId': typeof PerformanceSettingTemplateIdIndexRoute
  '/company/$companyId/companyPersonnel/$companyPersonnelId': typeof CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute
  '/company/setting/datacategory/datacategoryView': typeof CompanySettingDatacategoryDatacategoryViewIndexRoute
  '/employee/setting/category/$categoryName': typeof EmployeeSettingCategoryCategoryNameIndexRoute
  '/employee/setting/department/$departmentName': typeof EmployeeSettingDepartmentDepartmentNameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/': typeof AuthIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/employee/': typeof EmployeeIndexRoute
  '/payroll/': typeof PayrollIndexRoute
  '/performance/': typeof PerformanceIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/auth/signin/': typeof AuthSigninIndexRoute
  '/auth/signup/': typeof AuthSignupIndexRoute
  '/company/$companyId/': typeof CompanyCompanyIdIndexRoute
  '/company/setting/': typeof CompanySettingIndexRoute
  '/employee/$userId/': typeof EmployeeUserIdIndexRoute
  '/employee/setting/': typeof EmployeeSettingIndexRoute
  '/employee/shiftschedule/': typeof EmployeeShiftscheduleIndexRoute
  '/features/ProfitLoss/': typeof FeaturesProfitLossIndexRoute
  '/features/company-list/': typeof FeaturesCompanyListIndexRoute
  '/features/personnel-list/': typeof FeaturesPersonnelListIndexRoute
  '/payroll/$employeeId/': typeof PayrollEmployeeIdIndexRoute
  '/performance/$employeeId/': typeof PerformanceEmployeeIdIndexRoute
  '/performance/setting/': typeof PerformanceSettingIndexRoute
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/setting/': typeof ProjectsSettingIndexRoute
  '/company/$companyId/companyPersonnel/': typeof CompanyCompanyIdCompanyPersonnelIndexRoute
  '/company/setting/datacategory/': typeof CompanySettingDatacategoryIndexRoute
  '/employee/$userId/payroll/': typeof EmployeeUserIdPayrollIndexRoute
  '/employee/$userId/performance/': typeof EmployeeUserIdPerformanceIndexRoute
  '/employee/$userId/profile/': typeof EmployeeUserIdProfileIndexRoute
  '/features/ProfitLoss/$projectName/': typeof FeaturesProfitLossProjectNameIndexRoute
  '/payroll/$employeeId/$paymentId/': typeof PayrollEmployeeIdPaymentIdIndexRoute
  '/payroll/$employeeId/joined-projects/': typeof PayrollEmployeeIdJoinedProjectsIndexRoute
  '/performance/$employeeId/$sheetId/': typeof PerformanceEmployeeIdSheetIdIndexRoute
  '/performance/$employeeId/accesscontrol/': typeof PerformanceEmployeeIdAccesscontrolIndexRoute
  '/performance/setting/$templateId/': typeof PerformanceSettingTemplateIdIndexRoute
  '/company/$companyId/companyPersonnel/$companyPersonnelId/': typeof CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute
  '/company/setting/datacategory/datacategoryView/': typeof CompanySettingDatacategoryDatacategoryViewIndexRoute
  '/employee/setting/category/$categoryName/': typeof EmployeeSettingCategoryCategoryNameIndexRoute
  '/employee/setting/department/$departmentName/': typeof EmployeeSettingDepartmentDepartmentNameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/company'
    | '/employee'
    | '/payroll'
    | '/performance'
    | '/projects'
    | '/auth/signin'
    | '/auth/signup'
    | '/company/$companyId'
    | '/company/setting'
    | '/employee/$userId'
    | '/employee/setting'
    | '/employee/shiftschedule'
    | '/features/ProfitLoss'
    | '/features/company-list'
    | '/features/personnel-list'
    | '/payroll/$employeeId'
    | '/performance/$employeeId'
    | '/performance/setting'
    | '/projects/$projectId'
    | '/projects/setting'
    | '/company/$companyId/companyPersonnel'
    | '/company/setting/datacategory'
    | '/employee/$userId/payroll'
    | '/employee/$userId/performance'
    | '/employee/$userId/profile'
    | '/features/ProfitLoss/$projectName'
    | '/payroll/$employeeId/$paymentId'
    | '/payroll/$employeeId/joined-projects'
    | '/performance/$employeeId/$sheetId'
    | '/performance/$employeeId/accesscontrol'
    | '/performance/setting/$templateId'
    | '/company/$companyId/companyPersonnel/$companyPersonnelId'
    | '/company/setting/datacategory/datacategoryView'
    | '/employee/setting/category/$categoryName'
    | '/employee/setting/department/$departmentName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth'
    | '/company'
    | '/employee'
    | '/payroll'
    | '/performance'
    | '/projects'
    | '/auth/signin'
    | '/auth/signup'
    | '/company/$companyId'
    | '/company/setting'
    | '/employee/$userId'
    | '/employee/setting'
    | '/employee/shiftschedule'
    | '/features/ProfitLoss'
    | '/features/company-list'
    | '/features/personnel-list'
    | '/payroll/$employeeId'
    | '/performance/$employeeId'
    | '/performance/setting'
    | '/projects/$projectId'
    | '/projects/setting'
    | '/company/$companyId/companyPersonnel'
    | '/company/setting/datacategory'
    | '/employee/$userId/payroll'
    | '/employee/$userId/performance'
    | '/employee/$userId/profile'
    | '/features/ProfitLoss/$projectName'
    | '/payroll/$employeeId/$paymentId'
    | '/payroll/$employeeId/joined-projects'
    | '/performance/$employeeId/$sheetId'
    | '/performance/$employeeId/accesscontrol'
    | '/performance/setting/$templateId'
    | '/company/$companyId/companyPersonnel/$companyPersonnelId'
    | '/company/setting/datacategory/datacategoryView'
    | '/employee/setting/category/$categoryName'
    | '/employee/setting/department/$departmentName'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/'
    | '/company/'
    | '/employee/'
    | '/payroll/'
    | '/performance/'
    | '/projects/'
    | '/auth/signin/'
    | '/auth/signup/'
    | '/company/$companyId/'
    | '/company/setting/'
    | '/employee/$userId/'
    | '/employee/setting/'
    | '/employee/shiftschedule/'
    | '/features/ProfitLoss/'
    | '/features/company-list/'
    | '/features/personnel-list/'
    | '/payroll/$employeeId/'
    | '/performance/$employeeId/'
    | '/performance/setting/'
    | '/projects/$projectId/'
    | '/projects/setting/'
    | '/company/$companyId/companyPersonnel/'
    | '/company/setting/datacategory/'
    | '/employee/$userId/payroll/'
    | '/employee/$userId/performance/'
    | '/employee/$userId/profile/'
    | '/features/ProfitLoss/$projectName/'
    | '/payroll/$employeeId/$paymentId/'
    | '/payroll/$employeeId/joined-projects/'
    | '/performance/$employeeId/$sheetId/'
    | '/performance/$employeeId/accesscontrol/'
    | '/performance/setting/$templateId/'
    | '/company/$companyId/companyPersonnel/$companyPersonnelId/'
    | '/company/setting/datacategory/datacategoryView/'
    | '/employee/setting/category/$categoryName/'
    | '/employee/setting/department/$departmentName/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthIndexRoute: typeof AuthIndexRoute
  CompanyIndexRoute: typeof CompanyIndexRoute
  EmployeeIndexRoute: typeof EmployeeIndexRoute
  PayrollIndexRoute: typeof PayrollIndexRoute
  PerformanceIndexRoute: typeof PerformanceIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  AuthSigninIndexRoute: typeof AuthSigninIndexRoute
  AuthSignupIndexRoute: typeof AuthSignupIndexRoute
  CompanyCompanyIdIndexRoute: typeof CompanyCompanyIdIndexRoute
  CompanySettingIndexRoute: typeof CompanySettingIndexRoute
  EmployeeUserIdIndexRoute: typeof EmployeeUserIdIndexRoute
  EmployeeSettingIndexRoute: typeof EmployeeSettingIndexRoute
  EmployeeShiftscheduleIndexRoute: typeof EmployeeShiftscheduleIndexRoute
  FeaturesProfitLossIndexRoute: typeof FeaturesProfitLossIndexRoute
  FeaturesCompanyListIndexRoute: typeof FeaturesCompanyListIndexRoute
  FeaturesPersonnelListIndexRoute: typeof FeaturesPersonnelListIndexRoute
  PayrollEmployeeIdIndexRoute: typeof PayrollEmployeeIdIndexRoute
  PerformanceEmployeeIdIndexRoute: typeof PerformanceEmployeeIdIndexRoute
  PerformanceSettingIndexRoute: typeof PerformanceSettingIndexRoute
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  ProjectsSettingIndexRoute: typeof ProjectsSettingIndexRoute
  CompanyCompanyIdCompanyPersonnelIndexRoute: typeof CompanyCompanyIdCompanyPersonnelIndexRoute
  CompanySettingDatacategoryIndexRoute: typeof CompanySettingDatacategoryIndexRoute
  EmployeeUserIdPayrollIndexRoute: typeof EmployeeUserIdPayrollIndexRoute
  EmployeeUserIdPerformanceIndexRoute: typeof EmployeeUserIdPerformanceIndexRoute
  EmployeeUserIdProfileIndexRoute: typeof EmployeeUserIdProfileIndexRoute
  FeaturesProfitLossProjectNameIndexRoute: typeof FeaturesProfitLossProjectNameIndexRoute
  PayrollEmployeeIdPaymentIdIndexRoute: typeof PayrollEmployeeIdPaymentIdIndexRoute
  PayrollEmployeeIdJoinedProjectsIndexRoute: typeof PayrollEmployeeIdJoinedProjectsIndexRoute
  PerformanceEmployeeIdSheetIdIndexRoute: typeof PerformanceEmployeeIdSheetIdIndexRoute
  PerformanceEmployeeIdAccesscontrolIndexRoute: typeof PerformanceEmployeeIdAccesscontrolIndexRoute
  PerformanceSettingTemplateIdIndexRoute: typeof PerformanceSettingTemplateIdIndexRoute
  CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute: typeof CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute
  CompanySettingDatacategoryDatacategoryViewIndexRoute: typeof CompanySettingDatacategoryDatacategoryViewIndexRoute
  EmployeeSettingCategoryCategoryNameIndexRoute: typeof EmployeeSettingCategoryCategoryNameIndexRoute
  EmployeeSettingDepartmentDepartmentNameIndexRoute: typeof EmployeeSettingDepartmentDepartmentNameIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthIndexRoute: AuthIndexRoute,
  CompanyIndexRoute: CompanyIndexRoute,
  EmployeeIndexRoute: EmployeeIndexRoute,
  PayrollIndexRoute: PayrollIndexRoute,
  PerformanceIndexRoute: PerformanceIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  AuthSigninIndexRoute: AuthSigninIndexRoute,
  AuthSignupIndexRoute: AuthSignupIndexRoute,
  CompanyCompanyIdIndexRoute: CompanyCompanyIdIndexRoute,
  CompanySettingIndexRoute: CompanySettingIndexRoute,
  EmployeeUserIdIndexRoute: EmployeeUserIdIndexRoute,
  EmployeeSettingIndexRoute: EmployeeSettingIndexRoute,
  EmployeeShiftscheduleIndexRoute: EmployeeShiftscheduleIndexRoute,
  FeaturesProfitLossIndexRoute: FeaturesProfitLossIndexRoute,
  FeaturesCompanyListIndexRoute: FeaturesCompanyListIndexRoute,
  FeaturesPersonnelListIndexRoute: FeaturesPersonnelListIndexRoute,
  PayrollEmployeeIdIndexRoute: PayrollEmployeeIdIndexRoute,
  PerformanceEmployeeIdIndexRoute: PerformanceEmployeeIdIndexRoute,
  PerformanceSettingIndexRoute: PerformanceSettingIndexRoute,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  ProjectsSettingIndexRoute: ProjectsSettingIndexRoute,
  CompanyCompanyIdCompanyPersonnelIndexRoute:
    CompanyCompanyIdCompanyPersonnelIndexRoute,
  CompanySettingDatacategoryIndexRoute: CompanySettingDatacategoryIndexRoute,
  EmployeeUserIdPayrollIndexRoute: EmployeeUserIdPayrollIndexRoute,
  EmployeeUserIdPerformanceIndexRoute: EmployeeUserIdPerformanceIndexRoute,
  EmployeeUserIdProfileIndexRoute: EmployeeUserIdProfileIndexRoute,
  FeaturesProfitLossProjectNameIndexRoute:
    FeaturesProfitLossProjectNameIndexRoute,
  PayrollEmployeeIdPaymentIdIndexRoute: PayrollEmployeeIdPaymentIdIndexRoute,
  PayrollEmployeeIdJoinedProjectsIndexRoute:
    PayrollEmployeeIdJoinedProjectsIndexRoute,
  PerformanceEmployeeIdSheetIdIndexRoute:
    PerformanceEmployeeIdSheetIdIndexRoute,
  PerformanceEmployeeIdAccesscontrolIndexRoute:
    PerformanceEmployeeIdAccesscontrolIndexRoute,
  PerformanceSettingTemplateIdIndexRoute:
    PerformanceSettingTemplateIdIndexRoute,
  CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute:
    CompanyCompanyIdCompanyPersonnelCompanyPersonnelIdIndexRoute,
  CompanySettingDatacategoryDatacategoryViewIndexRoute:
    CompanySettingDatacategoryDatacategoryViewIndexRoute,
  EmployeeSettingCategoryCategoryNameIndexRoute:
    EmployeeSettingCategoryCategoryNameIndexRoute,
  EmployeeSettingDepartmentDepartmentNameIndexRoute:
    EmployeeSettingDepartmentDepartmentNameIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/",
        "/company/",
        "/employee/",
        "/payroll/",
        "/performance/",
        "/projects/",
        "/auth/signin/",
        "/auth/signup/",
        "/company/$companyId/",
        "/company/setting/",
        "/employee/$userId/",
        "/employee/setting/",
        "/employee/shiftschedule/",
        "/features/ProfitLoss/",
        "/features/company-list/",
        "/features/personnel-list/",
        "/payroll/$employeeId/",
        "/performance/$employeeId/",
        "/performance/setting/",
        "/projects/$projectId/",
        "/projects/setting/",
        "/company/$companyId/companyPersonnel/",
        "/company/setting/datacategory/",
        "/employee/$userId/payroll/",
        "/employee/$userId/performance/",
        "/employee/$userId/profile/",
        "/features/ProfitLoss/$projectName/",
        "/payroll/$employeeId/$paymentId/",
        "/payroll/$employeeId/joined-projects/",
        "/performance/$employeeId/$sheetId/",
        "/performance/$employeeId/accesscontrol/",
        "/performance/setting/$templateId/",
        "/company/$companyId/companyPersonnel/$companyPersonnelId/",
        "/company/setting/datacategory/datacategoryView/",
        "/employee/setting/category/$categoryName/",
        "/employee/setting/department/$departmentName/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/company/": {
      "filePath": "company/index.tsx"
    },
    "/employee/": {
      "filePath": "employee/index.tsx"
    },
    "/payroll/": {
      "filePath": "payroll/index.tsx"
    },
    "/performance/": {
      "filePath": "performance/index.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    },
    "/auth/signin/": {
      "filePath": "auth/signin/index.tsx"
    },
    "/auth/signup/": {
      "filePath": "auth/signup/index.tsx"
    },
    "/company/$companyId/": {
      "filePath": "company/$companyId/index.tsx"
    },
    "/company/setting/": {
      "filePath": "company/setting/index.tsx"
    },
    "/employee/$userId/": {
      "filePath": "employee/$userId/index.tsx"
    },
    "/employee/setting/": {
      "filePath": "employee/setting/index.tsx"
    },
    "/employee/shiftschedule/": {
      "filePath": "employee/shiftschedule/index.tsx"
    },
    "/features/ProfitLoss/": {
      "filePath": "features/ProfitLoss/index.tsx"
    },
    "/features/company-list/": {
      "filePath": "features/company-list/index.tsx"
    },
    "/features/personnel-list/": {
      "filePath": "features/personnel-list/index.tsx"
    },
    "/payroll/$employeeId/": {
      "filePath": "payroll/$employeeId/index.tsx"
    },
    "/performance/$employeeId/": {
      "filePath": "performance/$employeeId/index.tsx"
    },
    "/performance/setting/": {
      "filePath": "performance/setting/index.tsx"
    },
    "/projects/$projectId/": {
      "filePath": "projects/$projectId/index.tsx"
    },
    "/projects/setting/": {
      "filePath": "projects/setting/index.tsx"
    },
    "/company/$companyId/companyPersonnel/": {
      "filePath": "company/$companyId/companyPersonnel/index.tsx"
    },
    "/company/setting/datacategory/": {
      "filePath": "company/setting/datacategory/index.tsx"
    },
    "/employee/$userId/payroll/": {
      "filePath": "employee/$userId/payroll/index.tsx"
    },
    "/employee/$userId/performance/": {
      "filePath": "employee/$userId/performance/index.tsx"
    },
    "/employee/$userId/profile/": {
      "filePath": "employee/$userId/profile/index.tsx"
    },
    "/features/ProfitLoss/$projectName/": {
      "filePath": "features/ProfitLoss/$projectName/index.tsx"
    },
    "/payroll/$employeeId/$paymentId/": {
      "filePath": "payroll/$employeeId/$paymentId/index.tsx"
    },
    "/payroll/$employeeId/joined-projects/": {
      "filePath": "payroll/$employeeId/joined-projects/index.tsx"
    },
    "/performance/$employeeId/$sheetId/": {
      "filePath": "performance/$employeeId/$sheetId/index.tsx"
    },
    "/performance/$employeeId/accesscontrol/": {
      "filePath": "performance/$employeeId/accesscontrol/index.tsx"
    },
    "/performance/setting/$templateId/": {
      "filePath": "performance/setting/$templateId/index.tsx"
    },
    "/company/$companyId/companyPersonnel/$companyPersonnelId/": {
      "filePath": "company/$companyId/companyPersonnel/$companyPersonnelId/index.tsx"
    },
    "/company/setting/datacategory/datacategoryView/": {
      "filePath": "company/setting/datacategory/datacategoryView/index.tsx"
    },
    "/employee/setting/category/$categoryName/": {
      "filePath": "employee/setting/category/$categoryName/index.tsx"
    },
    "/employee/setting/department/$departmentName/": {
      "filePath": "employee/setting/department/$departmentName/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
